package org.apache.spark.metrics.source;
/**
 * Metrics for code generation.
 */
public  class CodegenMetrics$ implements org.apache.spark.metrics.source.Source {
  /**
   * Static reference to the singleton instance of this Scala object.
   */
  public static final CodegenMetrics$ MODULE$ = null;
  public   CodegenMetrics$ ()  { throw new RuntimeException(); }
  public  java.lang.String sourceName ()  { throw new RuntimeException(); }
  public  com.codahale.metrics.MetricRegistry metricRegistry ()  { throw new RuntimeException(); }
  /**
   * Histogram of the length of source code text compiled by CodeGenerator (in characters).
   * @return (undocumented)
   */
  public  com.codahale.metrics.Histogram METRIC_SOURCE_CODE_SIZE ()  { throw new RuntimeException(); }
  /**
   * Histogram of the time it took to compile source code text (in milliseconds).
   * @return (undocumented)
   */
  public  com.codahale.metrics.Histogram METRIC_COMPILATION_TIME ()  { throw new RuntimeException(); }
  /**
   * Histogram of the bytecode size of each class generated by CodeGenerator.
   * @return (undocumented)
   */
  public  com.codahale.metrics.Histogram METRIC_GENERATED_CLASS_BYTECODE_SIZE ()  { throw new RuntimeException(); }
  /**
   * Histogram of the bytecode size of each method in classes generated by CodeGenerator.
   * @return (undocumented)
   */
  public  com.codahale.metrics.Histogram METRIC_GENERATED_METHOD_BYTECODE_SIZE ()  { throw new RuntimeException(); }
}
